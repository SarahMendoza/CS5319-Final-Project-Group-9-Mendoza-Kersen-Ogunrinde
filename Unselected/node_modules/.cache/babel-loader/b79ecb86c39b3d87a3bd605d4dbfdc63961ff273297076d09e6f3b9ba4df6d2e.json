{"ast":null,"code":"var _jsxFileName = \"/Users/ogunrindekirk/Downloads/CS 5319/Project/personal-finance-app/Unselected/src/components/StartPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StartPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [isNameSet, setIsNameSet] = useState(false);\n\n  // Retrieve the name from localStorage when the component mounts\n  useEffect(() => {\n    const storedName = localStorage.getItem('username');\n    if (storedName) {\n      setName(storedName); // If the name exists, set it\n      setIsNameSet(true); // Mark that the name has been set\n      navigate('/overview'); // Automatically navigate to overview if name exists\n    }\n  }, [navigate]);\n\n  // Save the name and navigate to the overview page\n  const handleStart = () => {\n    if (name) {\n      localStorage.setItem('username', name); // Store the name in localStorage\n      setIsNameSet(true); // Mark name as set\n      navigate('/overview'); // Navigate to overview page\n    } else {\n      alert(\"Please enter your name.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-8\",\n      children: \"Welcome to Budget.ly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: isNameSet ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl\",\n        children: [\"Hello, \", name, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this) // Greet the user with their name if set\n      : /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl\",\n        children: \"What\\u2019s your name?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) // If name not set, ask for it\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), !isNameSet && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your name\",\n      className: \"mb-4 p-2 border rounded w-64\",\n      value: name,\n      onChange: e => setName(e.target.value) // Update the name as user types\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStart,\n      className: \"bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700\",\n      children: \"Start Using Budget.ly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(StartPage, \"DuYTu109InSVETysB1cvtuyrt3w=\", false, function () {\n  return [useNavigate];\n});\n_c = StartPage;\nexport default StartPage;\nvar _c;\n$RefreshReg$(_c, \"StartPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","StartPage","_s","navigate","name","setName","isNameSet","setIsNameSet","storedName","localStorage","getItem","handleStart","setItem","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/ogunrindekirk/Downloads/CS 5319/Project/personal-finance-app/Unselected/src/components/StartPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst StartPage = () => {\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [isNameSet, setIsNameSet] = useState(false);\n\n  // Retrieve the name from localStorage when the component mounts\n  useEffect(() => {\n    const storedName = localStorage.getItem('username');\n    if (storedName) {\n      setName(storedName); // If the name exists, set it\n      setIsNameSet(true); // Mark that the name has been set\n      navigate('/overview'); // Automatically navigate to overview if name exists\n    }\n  }, [navigate]);\n\n  // Save the name and navigate to the overview page\n  const handleStart = () => {\n    if (name) {\n      localStorage.setItem('username', name); // Store the name in localStorage\n      setIsNameSet(true); // Mark name as set\n      navigate('/overview'); // Navigate to overview page\n    } else {\n      alert(\"Please enter your name.\");\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center h-screen bg-gray-100\">\n      <h1 className=\"text-4xl font-bold mb-8\">Welcome to Budget.ly</h1>\n\n      {/* Personalize the greeting message */}\n      <div className=\"mb-4\">\n        {isNameSet ? (\n          <h2 className=\"text-2xl\">Hello, {name}!</h2> // Greet the user with their name if set\n        ) : (\n          <h2 className=\"text-2xl\">What’s your name?</h2> // If name not set, ask for it\n        )}\n      </div>\n\n      {/* Input to get the user’s name, only shown if the name isn't set yet */}\n      {!isNameSet && (\n        <input\n          type=\"text\"\n          placeholder=\"Enter your name\"\n          className=\"mb-4 p-2 border rounded w-64\"\n          value={name}\n          onChange={(e) => setName(e.target.value)} // Update the name as user types\n        />\n      )}\n\n      {/* Start using the app button */}\n      <button\n        onClick={handleStart}\n        className=\"bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700\"\n      >\n        Start Using Budget.ly\n      </button>\n    </div>\n  );\n};\n\nexport default StartPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACnD,IAAIF,UAAU,EAAE;MACdH,OAAO,CAACG,UAAU,CAAC,CAAC,CAAC;MACrBD,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;MACpBJ,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACzB;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMQ,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIP,IAAI,EAAE;MACRK,YAAY,CAACG,OAAO,CAAC,UAAU,EAAER,IAAI,CAAC,CAAC,CAAC;MACxCG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;MACpBJ,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;IACzB,CAAC,MAAM;MACLU,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EAED,oBACEb,OAAA;IAAKc,SAAS,EAAC,gEAAgE;IAAAC,QAAA,gBAC7Ef,OAAA;MAAIc,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGjEnB,OAAA;MAAKc,SAAS,EAAC,MAAM;MAAAC,QAAA,EAClBT,SAAS,gBACRN,OAAA;QAAIc,SAAS,EAAC,UAAU;QAAAC,QAAA,GAAC,SAAO,EAACX,IAAI,EAAC,GAAC;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,CAAC;MAAA,eAE7CnB,OAAA;QAAIc,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,CAAC;IACjD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EAGL,CAACb,SAAS,iBACTN,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,iBAAiB;MAC7BP,SAAS,EAAC,8BAA8B;MACxCQ,KAAK,EAAElB,IAAK;MACZmB,QAAQ,EAAGC,CAAC,IAAKnB,OAAO,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAC;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CACF,eAGDnB,OAAA;MACE0B,OAAO,EAAEf,WAAY;MACrBG,SAAS,EAAC,4DAA4D;MAAAC,QAAA,EACvE;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACjB,EAAA,CA3DID,SAAS;EAAA,QACIH,WAAW;AAAA;AAAA6B,EAAA,GADxB1B,SAAS;AA6Df,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}