{"ast":null,"code":"var _jsxFileName = \"/Users/ogunrindekirk/Downloads/CS 5319/Project/personal-finance-app/Unselected/src/components/Goal.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from './Sidebar.tsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Goal = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [target, setTarget] = useState('');\n  const [goals, setGoals] = useState([]);\n\n  // used to fetch existing goals on component mount\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/goals', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => setGoals(Array.isArray(data) ? data : [])).catch(err => {\n      console.error('Error fetching goals:', err);\n      setGoals([]);\n    });\n  }, []);\n\n  // used to handle new goal submission\n  const submitGoal = () => {\n    fetch('http://127.0.0.1:5000/goals', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title,\n        target: parseFloat(target),\n        current: 0\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        alert(`Error: ${data.error}`);\n      } else {\n        setGoals([...goals, data.goal]);\n        setTitle('');\n        setTarget('');\n      }\n    }).catch(err => {\n      console.error('Error submitting goal:', err);\n      alert('Failed to submit goal');\n    });\n  };\n\n  // used to update goal progress\n  // used to update goal progress\n  const updateGoalProgress = (goalIndex, newProgress) => {\n    console.log(`Updating goal at index: ${goalIndex}, New Progress: ${newProgress}`);\n    fetch(`http://127.0.0.1:5000/goals/${goalIndex}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        current: newProgress\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        alert(`Error updating goal: ${data.error}`);\n      } else {\n        // Update local state with the updated goal\n        const updatedGoals = goals.map((goal, idx) => idx === goalIndex ? {\n          ...goal,\n          current: newProgress\n        } : goal);\n        setGoals(updatedGoals);\n      }\n    }).catch(err => {\n      console.error('Error updating goal:', err);\n      alert('Failed to update goal');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 bg-gray-100 p-10 overflow-y-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-5xl font-bold text-gray-800 mb-4\",\n          children: \"Your Savings Goals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xl text-gray-600 mb-8\",\n          children: \"Add and track your financial goals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 shadow rounded max-w-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-semibold mb-4\",\n            children: \"Add New Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Goal title (e.g. Emergency Fund)\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            value: title,\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Target amount (e.g. 500)\",\n            className: \"w-full p-2 mb-4 border rounded\",\n            value: target,\n            onChange: e => setTarget(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: submitGoal,\n            className: \"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded\",\n            children: \"Add Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-semibold mb-6\",\n          children: \"Current Goals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), goals.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"No goals yet. Add one above!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this) : goals.map(goal => {\n          const progress = goal.current / goal.target * 100;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6 p-4 bg-white shadow rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-xl font-bold text-gray-700\",\n              children: goal.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-gray-500 mb-1\",\n              children: [\"$\", goal.current, \" saved of $\", goal.target]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full bg-gray-200 h-4 rounded mb-2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"h-4 bg-green-500 rounded\",\n                style: {\n                  width: `${Math.min(progress, 100)}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Enter new saved amount\",\n              className: \"w-1/2 p-2 border rounded mr-2\",\n              value: goal.newProgress || '',\n              onChange: e => {\n                const newGoals = [...goals];\n                newGoals.find(g => g.id === goal.id).newProgress = e.target.value;\n                setGoals(newGoals);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600\",\n              onClick: () => {\n                const newProgress = parseFloat(goal.newProgress || '0');\n                updateGoalProgress(goal.id, newProgress);\n              },\n              children: \"Save Progress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this)]\n          }, goal.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Goal, \"VgQbD6sZJLV/1VgIW0CLBtp6jjs=\");\n_c = Goal;\nexport default Goal;\nvar _c;\n$RefreshReg$(_c, \"Goal\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","jsxDEV","_jsxDEV","Goal","_s","title","setTitle","target","setTarget","goals","setGoals","fetch","method","headers","then","res","json","data","Array","isArray","catch","err","console","error","submitGoal","body","JSON","stringify","parseFloat","current","alert","goal","updateGoalProgress","goalIndex","newProgress","log","updatedGoals","map","idx","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","onClick","length","progress","style","width","Math","min","newGoals","find","g","id","_c","$RefreshReg$"],"sources":["/Users/ogunrindekirk/Downloads/CS 5319/Project/personal-finance-app/Unselected/src/components/Goal.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Sidebar from './Sidebar.tsx';\n\nconst Goal = () => {\n  const [title, setTitle] = useState('');\n  const [target, setTarget] = useState('');\n  const [goals, setGoals] = useState([]);\n\n  // used to fetch existing goals on component mount\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/goals', {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' }\n    })\n      .then(res => res.json())\n      .then(data => setGoals(Array.isArray(data) ? data : []))\n      .catch(err => {\n        console.error('Error fetching goals:', err);\n        setGoals([]);\n      });\n  }, []);\n\n  // used to handle new goal submission\n  const submitGoal = () => {\n    fetch('http://127.0.0.1:5000/goals', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        title,\n        target: parseFloat(target),\n        current: 0\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.error) {\n          alert(`Error: ${data.error}`);\n        } else {\n          setGoals([...goals, data.goal]);\n          setTitle('');\n          setTarget('');\n        }\n      })\n      .catch(err => {\n        console.error('Error submitting goal:', err);\n        alert('Failed to submit goal');\n      });\n  };\n\n  // used to update goal progress\n  // used to update goal progress\n  const updateGoalProgress = (goalIndex: number, newProgress: number) => {\n    console.log(`Updating goal at index: ${goalIndex}, New Progress: ${newProgress}`);\n    \n    fetch(`http://127.0.0.1:5000/goals/${goalIndex}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ current: newProgress })\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.error) {\n          alert(`Error updating goal: ${data.error}`);\n        } else {\n          // Update local state with the updated goal\n          const updatedGoals = goals.map((goal, idx) =>\n            idx === goalIndex ? { ...goal, current: newProgress } : goal\n          );\n          setGoals(updatedGoals);\n        }\n      })\n      .catch(err => {\n        console.error('Error updating goal:', err);\n        alert('Failed to update goal');\n      });\n  };\n\n  return (\n    <div className=\"flex h-screen\">\n      <Sidebar />\n      <div className=\"flex-1 bg-gray-100 p-10 overflow-y-auto\">\n        {/* Title Section */}\n        <div className=\"mb-10\">\n          <h1 className=\"text-5xl font-bold text-gray-800 mb-4\">Your Savings Goals</h1>\n          <p className=\"text-xl text-gray-600 mb-8\">Add and track your financial goals</p>\n\n          {/* New Goal Form */}\n          <div className=\"bg-white p-6 shadow rounded max-w-lg\">\n            <h2 className=\"text-2xl font-semibold mb-4\">Add New Goal</h2>\n            <input\n              type=\"text\"\n              placeholder=\"Goal title (e.g. Emergency Fund)\"\n              className=\"w-full p-2 mb-4 border rounded\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            />\n            <input\n              type=\"number\"\n              placeholder=\"Target amount (e.g. 500)\"\n              className=\"w-full p-2 mb-4 border rounded\"\n              value={target}\n              onChange={(e) => setTarget(e.target.value)}\n            />\n            <button\n              onClick={submitGoal}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded\"\n            >\n              Add Goal\n            </button>\n          </div>\n        </div>\n\n        {/* Current Goals Section */}\n        <div>\n          <h2 className=\"text-3xl font-semibold mb-6\">Current Goals</h2>\n          {goals.length === 0 ? (\n            <p className=\"text-gray-500\">No goals yet. Add one above!</p>\n          ) : (\n            goals.map((goal) => {\n              const progress = (goal.current / goal.target) * 100;\n\n              return (\n                <div key={goal.id} className=\"mb-6 p-4 bg-white shadow rounded\">\n                  <h3 className=\"text-xl font-bold text-gray-700\">{goal.title}</h3>\n                  <p className=\"text-sm text-gray-500 mb-1\">\n                    ${goal.current} saved of ${goal.target}\n                  </p>\n                  <div className=\"w-full bg-gray-200 h-4 rounded mb-2\">\n                    <div\n                      className=\"h-4 bg-green-500 rounded\"\n                      style={{ width: `${Math.min(progress, 100)}%` }}\n                    ></div>\n                  </div>\n\n                  {/* Update Progress */}\n                  <input\n                    type=\"number\"\n                    placeholder=\"Enter new saved amount\"\n                    className=\"w-1/2 p-2 border rounded mr-2\"\n                    value={goal.newProgress || ''}\n                    onChange={(e) => {\n                      const newGoals = [...goals];\n                      newGoals.find(g => g.id === goal.id).newProgress = e.target.value;\n                      setGoals(newGoals);\n                    }}\n                  />\n                  <button\n                    className=\"bg-blue-500 text-white px-3 py-1 rounded hover:bg-blue-600\"\n                    onClick={() => {\n                      const newProgress = parseFloat(goal.newProgress || '0');\n                      updateGoalProgress(goal.id, newProgress);\n                    }}\n                  >\n                    Save Progress\n                  </button>\n                </div>\n              );\n            })\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Goal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}